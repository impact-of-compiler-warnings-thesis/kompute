name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install ninja-build \
                           libfmt-dev \
                           libspdlog-dev \
                           libgtest-dev
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang, SPIRV-Cross, SPIRV-Tools, SPIRV-Reflect, SPIRV-Headers
          vulkan-use-cache: true
      - name: Generate build files
        run: |
          mkdir build && cd build
          cmake .. -GNinja \
                   -DCMAKE_BUILD_TYPE=Debug \
                   -DKOMPUTE_OPT_BUILD_TESTS=1 \
                   -DKOMPUTE_OPT_BUILD_SHADERS=0 \
                   -DKOMPUTE_OPT_BUILD_SINGLE_HEADER=0 \
                   -DKOMPUTE_OPT_CODE_COVERAGE=0 \
                   -DKOMPUTE_OPT_BUILD_DOCS=0 \
                   -DKOMPUTE_OPT_DISABLE_VULKAN_VERSION_CHECK=ON
      - name: Run build-wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} ninja -C build
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
